/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rdheroes;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author 073787251
 */
public class GameCanvas extends javax.swing.JPanel {
    Point p = MouseInfo.getPointerInfo().getLocation();
    /**
     * Creates new form GameCanvas
     */
    public GameCanvas() {
        initComponents();
    }
    public void anim () {
        Timer t1 = new Timer(17, new TimerListener());
        t1.start();
    }
    public void drawBoard(Graphics g) {
        p = MouseInfo.getPointerInfo().getLocation();
        for (int i = 0; i < MainFrame.board.size(); i++) {
            Slot s = MainFrame.board.get(i);
            if (i < 6 || (i >= 9 && i <= 10) || (i >= 14 && i <= 15) || (i >= 19 && i <= 20) || i >= 24) {
                s.display(g,Color.WHITE);
            } else if ((i >= 6 && i <= 8) || (i >= 21 && i <= 23)){
                s.display(g,Color.LIGHT_GRAY);
            } else {
                s.display(g,Color.GRAY);
            }
        }
        g.setColor(Color.BLACK);
        for (int i = 0; i <= getWidth(); i += 80) {
            g.drawLine(i, 0, i, getHeight());
        }
        for (int i = 0; i <= getHeight(); i += 120) {
            g.drawLine(0, i, getWidth()-3, i);
        }
        g.setColor(Color.YELLOW);
        g.drawRect(p.x-p.x%80, p.y-p.y%120, 80, 120);
        System.out.println(p.x);
    }
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        drawBoard(g);
    }

    @Override
    public void paint(Graphics g) {
        //drawSquare(g);
        drawBoard(g);
        //drawChar(g);
    }
    private class TimerListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent ae) {
            repaint();
        }
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new java.awt.Dimension(400, 721));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
